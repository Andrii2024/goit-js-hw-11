{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onBtnClick);\n\nfunction onBtnClick(e) {\n  e.preventDefault();\n\n  const delayInput = form.elements.delay;\n  const stateInput = form.elements.state;\n\n  const delay = parseInt(delayInput.value, 10);\n  const state = stateInput.value;\n\n  createPromise(delay, state);\n}\n\nfunction createPromise(delay, state) {\n  const newPromise = new Promise((resolve, reject) => {\n    if (state === 'fulfilled') {\n      setTimeout(() => resolve(delay), delay);\n    } else if (state === 'rejected') {\n      setTimeout(() => reject(delay), delay);\n    }\n  });\n\n  newPromise\n    .then(delay => {\n      const message = `✅ Fulfilled promise in ${delay}ms`;\n      showMessage('success', message);\n    })\n    .catch(delay => {\n      const message = `❌ Rejected promise in ${delay}ms`;\n      showMessage('error', message);\n    });\n}\n\nfunction showMessage(type, message) {\n  iziToast.show({\n    title: `${type}`,\n    message: message,\n    position: 'topRight',\n    color: type === 'success' ? 'green' : 'red',\n  });\n}\n\n// ======================\n// const form = document.querySelector('.form');\n// const btnBar = document.querySelector('.btn-bar');\n\n// btnBar.addEventListener('submit', onBtnClick);\n\n// function onBtnClick(e) {\n//   e.preventDefault();\n//   const delayInput = form.elements.delay;\n//   const stateInput = form.elements.state;\n//   const delay = parseInt(delayInput.value, 10);\n//   const state = stateInput.value;\n\n//   const promice = createPromise(delay, state);\n//   promice\n//     .then(delay => {\n//       const message = `✅ Fulfilled promise in ${delay}ms`;\n//       showMessage('success', message);\n//     })\n//     .catch(delay => {\n//       const message = `❌ Rejected promise in ${delay}ms`;\n//       showMessage('error', message);\n//     });\n// }\n\n// function createPromise(delay, state) {\n//   return new Promise((resolve, reject) => {\n//     if (state === 'fulfilled') {\n//       setTimeout(() => resolve(delay), delay);\n//     } else if (state === 'rejected') {\n//       setTimeout(() => reject(delay), delay);\n//     }\n//   });\n// }\n\n// function showMessage(type, message) {\n//   iziToast.show({\n//     title: `${type}`,\n//     message: message,\n//     position: 'topRight',\n//     color: type === 'success' ? 'green' : 'red', // Optional: You can customize the color\n//   });\n// }\n"],"names":["form","onBtnClick","delayInput","stateInput","delay","state","createPromise","resolve","reject","message","showMessage","type","iziToast"],"mappings":"oGAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,CAAU,EAE1C,SAASA,EAAW,EAAG,CACrB,EAAE,eAAc,EAEhB,MAAMC,EAAaF,EAAK,SAAS,MAC3BG,EAAaH,EAAK,SAAS,MAE3BI,EAAQ,SAASF,EAAW,MAAO,EAAE,EACrCG,EAAQF,EAAW,MAEzBG,EAAcF,EAAOC,CAAK,CAC5B,CAEA,SAASC,EAAcF,EAAOC,EAAO,CAChB,IAAI,QAAQ,CAACE,EAASC,IAAW,CAC9CH,IAAU,YACZ,WAAW,IAAME,EAAQH,CAAK,EAAGA,CAAK,EAC7BC,IAAU,YACnB,WAAW,IAAMG,EAAOJ,CAAK,EAAGA,CAAK,CAE3C,CAAG,EAGE,KAAKA,GAAS,CACb,MAAMK,EAAU,0BAA0BL,MAC1CM,EAAY,UAAWD,CAAO,CACpC,CAAK,EACA,MAAML,GAAS,CACd,MAAMK,EAAU,yBAAyBL,MACzCM,EAAY,QAASD,CAAO,CAClC,CAAK,CACL,CAEA,SAASC,EAAYC,EAAMF,EAAS,CAClCG,EAAS,KAAK,CACZ,MAAO,GAAGD,IACV,QAASF,EACT,SAAU,WACV,MAAOE,IAAS,UAAY,QAAU,KAC1C,CAAG,CACH"}